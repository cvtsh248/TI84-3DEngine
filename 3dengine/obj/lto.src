	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_vecAdd
_vecAdd:
	call	__frameset0
	ld	de, (ix + 9)
	ld	iy, (ix + 12)
	ld	bc, (iy)
	push	de
	pop	hl
	ld	hl, (hl)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	e, (iy + 3)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, (ix + 12)
	push	hl
	pop	iy
	ld	bc, (iy + 4)
	ld	de, (ix + 9)
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	iy, (ix + 12)
	ld	a, (iy + 7)
	push	de
	pop	iy
	ld	e, (iy + 7)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	de, (ix + 12)
	push	de
	pop	iy
	ld	bc, (iy + 8)
	ld	iy, (ix + 9)
	ld	hl, (iy + 8)
	push	de
	pop	iy
	ld	a, (iy + 11)
	ld	iy, (ix + 9)
	ld	e, (iy + 11)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecSubtract
_vecSubtract:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	de, (ix + 12)
	ld	bc, (iy)
	push	de
	pop	hl
	ld	hl, (hl)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	e, (iy + 3)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	ld	bc, (iy + 4)
	ld	de, (ix + 12)
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	iy, (ix + 9)
	ld	a, (iy + 7)
	push	de
	pop	iy
	ld	e, (iy + 7)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	iy, (ix + 9)
	ld	bc, (iy + 8)
	ld	iy, (ix + 12)
	ld	hl, (iy + 8)
	lea	de, iy
	ld	iy, (ix + 9)
	ld	a, (iy + 11)
	push	de
	pop	iy
	ld	e, (iy + 11)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecScalarProduct
_vecScalarProduct:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	hl, (ix + 12)
	ld	bc, (iy)
	ld	a, (iy + 3)
	ld	e, (ix + 15)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	de, (ix + 9)
	push	de
	pop	iy
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	ld	e, (ix + 15)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	de, (ix + 9)
	push	de
	pop	iy
	ld	bc, (iy + 8)
	ld	a, (iy + 11)
	ld	e, (ix + 15)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecCrossProduct
_vecCrossProduct:
	ld	hl, -24
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	(ix - 3), hl
	ld	a, (iy + 7)
	ld	(ix - 4), a
	push	bc
	pop	iy
	ld	hl, (iy + 8)
	ld	(ix - 7), hl
	ld	a, (iy + 11)
	ld	(ix - 8), a
	ld	bc, (iy + 4)
	ld	(ix - 14), bc
	ld	a, (iy + 7)
	ld	(ix - 15), a
	push	de
	pop	iy
	ld	hl, (iy + 8)
	ld	(ix - 18), hl
	ld	e, (iy + 11)
	ld	(ix - 19), e
	call	__fneg
	push	bc
	pop	iy
	ld	d, a
	push	hl
	pop	bc
	ld	a, e
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	ld	hl, (ix - 7)
	ld	e, (ix - 8)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	iy, (ix + 12)
	ld	hl, (iy)
	ld	(ix - 11), hl
	ld	a, (iy + 3)
	ld	(ix - 24), a
	ld	iy, (ix + 9)
	ld	hl, (iy)
	ld	(ix - 22), hl
	ld	d, (iy + 3)
	ld	(ix - 23), d
	ld	bc, (ix - 7)
	ld	a, (ix - 8)
	call	__fneg
	push	bc
	pop	iy
	ld	e, a
	push	hl
	pop	bc
	ld	a, d
	lea	hl, iy
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 7), a
	ld	bc, (ix - 18)
	ld	a, (ix - 19)
	ld	hl, (ix - 11)
	ld	d, (ix - 24)
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 7)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	bc, (ix - 11)
	ld	a, d
	call	__fneg
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 22)
	ld	a, (ix - 23)
	ld	hl, (ix - 14)
	ld	e, (ix - 15)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecDotProduct
_vecDotProduct:
	ld	hl, -11
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (iy)
	ld	(ix - 7), hl
	ld	a, (iy + 3)
	ld	(ix - 8), a
	push	de
	pop	hl
	ld	hl, (hl)
	ld	(ix - 3), hl
	push	de
	pop	iy
	ld	a, (iy + 3)
	ex	de, hl
	ld	(ix - 4), a
	ld	iy, (ix + 6)
	ld	bc, (iy + 4)
	push	hl
	pop	iy
	ld	hl, (iy + 4)
	lea	de, iy
	ld	iy, (ix + 6)
	ld	a, (iy + 7)
	push	de
	pop	iy
	ld	e, (iy + 7)
	call	__fmul
	ld	(ix - 11), bc
	ld	d, a
	ld	bc, (ix - 7)
	ld	a, (ix - 8)
	ld	hl, (ix - 3)
	ld	e, (ix - 4)
	call	__fmul
	ld	hl, (ix - 11)
	ld	e, d
	call	__fadd
	ld	(ix - 3), bc
	ld	d, a
	ld	iy, (ix + 6)
	ld	bc, (iy + 8)
	ld	iy, (ix + 9)
	ld	hl, (iy + 8)
	ld	iy, (ix + 6)
	ld	a, (iy + 11)
	ld	iy, (ix + 9)
	ld	e, (iy + 11)
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecNormalise
_vecNormalise:
	ld	hl, -7
	call	__frameset
	ld	iy, (ix + 9)
	ld	hl, (iy)
	ld	(ix - 3), hl
	lea	hl, iy + 3
	ld	a, (hl)
	ld	(ix - 7), a
	lea	de, iy + 4
	ld	bc, (iy + 4)
	push	de
	pop	iy
	lea	hl, iy + 3
	ld	a, (hl)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 6), a
	ld	bc, (ix - 3)
	ld	a, (ix - 7)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 6)
	call	__fadd
	ld	(ix - 3), bc
	ld	d, a
	ld	iy, (ix + 9)
	lea	hl, iy + 8
	ld	bc, (iy + 8)
	push	hl
	pop	iy
	lea	hl, iy + 3
	ld	a, (hl)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, -8388608
	ld	a, 63
	call	__fdiv
	push	bc
	pop	de
	ld	(ix - 6), de
	ld	(ix - 3), a
	ld	iy, (ix + 9)
	ld	bc, (iy)
	ld	a, (iy + 3)
	ex	de, hl
	ld	e, (ix - 3)
	call	__fmul
	ld	hl, (ix + 6)
	ld	(hl), bc
	push	hl
	pop	iy
	ld	(iy + 3), a
	ld	iy, (ix + 9)
	ld	hl, (iy + 4)
	ld	bc, (ix - 6)
	ld	a, e
	ld	iy, (ix + 9)
	ld	e, (iy + 7)
	call	__fmul
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	ld	hl, (iy + 8)
	ld	bc, (ix - 6)
	ld	a, (ix - 3)
	ld	e, (iy + 11)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecAngleBetween
_vecAngleBetween:
	ld	hl, -17
	call	__frameset
	ld	de, (ix + 6)
	ld	(ix - 17), de
	ld	hl, (ix + 9)
	ld	(ix - 3), hl
	push	hl
	push	de
	call	_vecDotProduct
	ld	(ix - 6), hl
	ld	(ix - 7), e
	pop	hl
	pop	hl
	ld	iy, (ix - 17)
	ld	hl, (iy)
	ld	(ix - 14), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	(ix - 10), bc
	ld	(ix - 11), a
	ld	bc, (ix - 14)
	ld	a, d
	push	bc
	pop	hl
	ld	e, d
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, (ix - 11)
	call	__fadd
	ld	(ix - 10), bc
	ld	d, a
	ld	bc, (iy + 8)
	ld	a, (iy + 11)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, -8388608
	ld	a, 63
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 6)
	ld	a, (ix - 7)
	call	__fmul
	ld	(ix - 6), bc
	ld	(ix - 7), a
	ld	iy, (ix - 3)
	ld	hl, (iy)
	ld	(ix - 14), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	(ix - 10), bc
	ld	(ix - 11), a
	ld	bc, (ix - 14)
	ld	a, d
	push	bc
	pop	hl
	ld	e, d
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, (ix - 11)
	call	__fadd
	ld	(ix - 10), bc
	ld	d, a
	ld	bc, (iy + 8)
	ld	a, (iy + 11)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, -8388608
	ld	a, 63
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 6)
	ld	a, (ix - 7)
	call	__fmul
	ld	(ix + 6), bc
	ld	(ix + 9), a
	ld	sp, ix
	pop	ix
	jp	_acos
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_linePlaneCollision
_linePlaneCollision:
	ld	hl, -27
	call	__frameset
	ld	iy, (ix + 33)
	lea	hl, ix - 12
	ld	(ix - 15), hl
	ld	hl, (iy)
	ld	(ix - 21), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	ld	hl, (ix + 15)
	ld	e, (ix + 18)
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 18), a
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	hl, (ix - 21)
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 18)
	call	__fadd
	ld	(ix - 18), bc
	ld	d, a
	ld	iy, (ix + 33)
	ld	hl, (iy + 8)
	ld	bc, (ix + 21)
	ld	a, (ix + 24)
	ld	e, (iy + 11)
	call	__fmul
	ld	hl, (ix - 18)
	ld	e, d
	call	__fadd
	ld	(ix - 18), bc
	ld	(ix - 21), a
	ld	iy, (ix + 36)
	ld	hl, (iy)
	ld	(ix - 27), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	ld	hl, (ix + 15)
	ld	e, (ix + 18)
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 24), a
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	hl, (ix - 27)
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 24)
	call	__fadd
	ld	(ix - 24), bc
	ld	d, a
	ld	iy, (ix + 36)
	ld	hl, (iy + 8)
	ld	bc, (ix + 21)
	ld	a, (ix + 24)
	ld	iy, (ix + 36)
	ld	e, (iy + 11)
	call	__fmul
	ld	hl, (ix - 24)
	ld	e, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 18)
	ld	a, (ix - 21)
	call	__fmul
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix + 27)
	ld	a, (ix + 30)
	call	__fdiv
	ld	l, a
	push	hl
	push	bc
	push	iy
	ld	hl, (ix - 15)
	push	hl
	call	_vecScalarProduct
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix + 33)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_vecAdd
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_accessMatrixElement
_accessMatrixElement:
	call	__frameset0
	ld	de, (ix + 6)
	ld	hl, (ix + 9)
	ld	iy, (ix + 12)
	ld	c, 4
	call	__ishl
	push	hl
	pop	bc
	add	iy, bc
	ld	c, 2
	ex	de, hl
	call	__ishl
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	e, (iy + 3)
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_MatrMul
_MatrMul:
	ld	hl, -38
	call	__frameset
	ld	hl, (ix + 9)
	ld	(ix - 22), hl
	ld	iy, (ix + 12)
	ld	de, 0
	lea	hl, ix - 16
	ld	(ix - 28), hl
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	(ix - 16), hl
	ld	(ix - 13), a
	ld	hl, (iy + 4)
	ld	a, (iy + 7)
	ld	(ix - 12), hl
	ld	(ix - 9), a
	ld	hl, (iy + 8)
	ld	a, (iy + 11)
	ld	(ix - 8), hl
	ld	(ix - 5), a
	ld	hl, (iy + 12)
	ld	a, (iy + 15)
	ld	(ix - 4), hl
	ld	(ix - 1), a
BB9_1:
	push	de
	pop	hl
	ld	bc, 4
	or	a, a
	sbc	hl, bc
	jp	z, BB9_6
	ld	(ix - 31), de
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
	ld	(ix - 25), hl
	xor	a, a
BB9_3:
	push	bc
	pop	hl
	ld	de, 16
	or	a, a
	sbc	hl, de
	jr	z, BB9_5
	push	bc
	pop	hl
	push	hl
	pop	de
	ld	(ix - 34), hl
	ld	hl, (ix - 22)
	add	hl, de
	ld	(ix - 37), hl
	ld	bc, (hl)
	ld	hl, (ix - 28)
	add	hl, de
	ld	(ix - 19), hl
	ld	hl, (ix - 19)
	ld	hl, (hl)
	ld	iy, (ix - 19)
	lea	de, iy + 3
	ld	(ix - 38), a
	ld	iy, (ix - 37)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	e, (iy)
	call	__fmul
	ld	hl, (ix - 25)
	ld	e, (ix - 38)
	call	__fadd
	push	bc
	pop	de
	ld	(ix - 25), de
	ld	hl, (ix - 19)
	ld	(hl), de
	ld	iy, (ix - 19)
	ld	(iy + 3), a
	ld	de, 4
	ld	hl, (ix - 34)
	add	hl, de
	push	hl
	pop	bc
	jr	BB9_3
BB9_5:
	ld	de, (ix - 31)
	inc	de
	ld	iy, (ix - 22)
	lea	iy, iy + 16
	ld	(ix - 22), iy
	jp	BB9_1
BB9_6:
	ld	hl, (ix - 16)
	ld	a, (ix - 13)
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), a
	ld	hl, (ix - 12)
	ld	a, (ix - 9)
	ld	(iy + 4), hl
	ld	(iy + 7), a
	ld	hl, (ix - 8)
	ld	a, (ix - 5)
	ld	(iy + 8), hl
	ld	(iy + 11), a
	ld	hl, (ix - 4)
	ld	a, (ix - 1)
	ld	(iy + 12), hl
	ld	(iy + 15), a
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	bc, 2097152
	ld	l, 65
	ld	de, 0
	ld	h, b
	ld	iy, -1048576
	ld	(_vertices), bc
	ld	a, l
	ld	(_vertices+3), a
	ld	(_vertices+4), bc
	ld	(_vertices+7), a
	ld	(_vertices+8), de
	ld	a, h
	ld	(_vertices+11), a
	ld	(_vertices+12), bc
	ld	a, l
	ld	(_vertices+15), a
	ld	(_vertices+16), iy
	ld	(_vertices+19), a
	ld	(_vertices+20), de
	ld	a, h
	ld	(_vertices+23), a
	ld	(_vertices+24), iy
	ld	a, l
	ld	(_vertices+27), a
	ld	(_vertices+28), bc
	ld	(_vertices+31), a
	ld	(_vertices+32), de
	ld	a, h
	ld	(_vertices+35), a
	ld	(_vertices+36), iy
	ld	a, l
	ld	(_vertices+39), a
	ld	(_vertices+40), bc
	ld	(_vertices+43), a
	ld	(_vertices+44), de
	ld	a, h
	ld	(_vertices+47), a
	ld	(_vertices+48), bc
	ld	a, l
	ld	(_vertices+51), a
	ld	(_vertices+52), bc
	ld	(_vertices+55), a
	ld	de, -6291456
	ld	(_vertices+56), de
	ld	(_vertices+59), a
	ld	(_vertices+60), bc
	ld	(_vertices+63), a
	ld	(_vertices+64), iy
	ld	(_vertices+67), a
	ld	(_vertices+68), de
	ld	(_vertices+71), a
	ld	(_vertices+72), iy
	ld	(_vertices+75), a
	ld	(_vertices+76), bc
	ld	(_vertices+79), a
	ld	(_vertices+80), de
	ld	(_vertices+83), a
	ld	(_vertices+84), iy
	ld	(_vertices+87), a
	ld	(_vertices+88), bc
	ld	(_vertices+91), a
	ld	(_vertices+92), de
	ld	(_vertices+95), a
	call	_gfx_Begin
	call	_gfx_ZeroScreen
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
BB10_1:
	call	_os_GetCSC
	or	a, a
	jr	z, BB10_1
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ret
	section	.text,"ax",@progbits

	section	.bss,"aw",@nobits
	public	_vertices
_vertices:
	rb	96

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	extern	_acos
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	__Unwind_SjLj_Unregister
	extern	__fneg
	extern	_gfx_ZeroScreen
	extern	__fdiv
	extern	_gfx_Begin
	extern	__fadd
	extern	_sqrt
	extern	_gfx_End
	extern	_os_GetCSC
	extern	__frameset0
	extern	__fsub
	extern	__ishl
	extern	__fmul
	extern	_gfx_SetDraw

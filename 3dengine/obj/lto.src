	section	.text,"ax",@progbits
	assume	adl = 1
	section	.text,"ax",@progbits
	public	_vecAdd
_vecAdd:
	call	__frameset0
	ld	de, (ix + 9)
	ld	iy, (ix + 12)
	ld	bc, (iy)
	push	de
	pop	hl
	ld	hl, (hl)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	e, (iy + 3)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, (ix + 12)
	push	hl
	pop	iy
	ld	bc, (iy + 4)
	ld	de, (ix + 9)
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	iy, (ix + 12)
	ld	a, (iy + 7)
	push	de
	pop	iy
	ld	e, (iy + 7)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	de, (ix + 12)
	push	de
	pop	iy
	ld	bc, (iy + 8)
	ld	iy, (ix + 9)
	ld	hl, (iy + 8)
	push	de
	pop	iy
	ld	a, (iy + 11)
	ld	iy, (ix + 9)
	ld	e, (iy + 11)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecSubtract
_vecSubtract:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	de, (ix + 12)
	ld	bc, (iy)
	push	de
	pop	hl
	ld	hl, (hl)
	ld	a, (iy + 3)
	push	de
	pop	iy
	ld	e, (iy + 3)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	ld	bc, (iy + 4)
	ld	de, (ix + 12)
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	iy, (ix + 9)
	ld	a, (iy + 7)
	push	de
	pop	iy
	ld	e, (iy + 7)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	iy, (ix + 9)
	ld	bc, (iy + 8)
	ld	iy, (ix + 12)
	ld	hl, (iy + 8)
	lea	de, iy
	ld	iy, (ix + 9)
	ld	a, (iy + 11)
	push	de
	pop	iy
	ld	e, (iy + 11)
	call	__fsub
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecScalarProduct
_vecScalarProduct:
	call	__frameset0
	ld	iy, (ix + 9)
	ld	hl, (ix + 12)
	ld	bc, (iy)
	ld	a, (iy + 3)
	ld	e, (ix + 15)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	de, (ix + 9)
	push	de
	pop	iy
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	ld	e, (ix + 15)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	de, (ix + 9)
	push	de
	pop	iy
	ld	bc, (iy + 8)
	ld	a, (iy + 11)
	ld	e, (ix + 15)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecCrossProduct
_vecCrossProduct:
	ld	hl, -24
	call	__frameset
	ld	de, (ix + 9)
	ld	bc, (ix + 12)
	push	de
	pop	iy
	ld	hl, (iy + 4)
	ld	(ix - 3), hl
	ld	a, (iy + 7)
	ld	(ix - 4), a
	push	bc
	pop	iy
	ld	hl, (iy + 8)
	ld	(ix - 7), hl
	ld	a, (iy + 11)
	ld	(ix - 8), a
	ld	bc, (iy + 4)
	ld	(ix - 14), bc
	ld	a, (iy + 7)
	ld	(ix - 15), a
	push	de
	pop	iy
	ld	hl, (iy + 8)
	ld	(ix - 18), hl
	ld	e, (iy + 11)
	ld	(ix - 19), e
	call	__fneg
	push	bc
	pop	iy
	ld	d, a
	push	hl
	pop	bc
	ld	a, e
	lea	hl, iy
	ld	e, d
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	ld	hl, (ix - 7)
	ld	e, (ix - 8)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy), bc
	ld	(iy + 3), a
	ld	iy, (ix + 12)
	ld	hl, (iy)
	ld	(ix - 11), hl
	ld	a, (iy + 3)
	ld	(ix - 24), a
	ld	iy, (ix + 9)
	ld	hl, (iy)
	ld	(ix - 22), hl
	ld	d, (iy + 3)
	ld	(ix - 23), d
	ld	bc, (ix - 7)
	ld	a, (ix - 8)
	call	__fneg
	push	bc
	pop	iy
	ld	e, a
	push	hl
	pop	bc
	ld	a, d
	lea	hl, iy
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 7), a
	ld	bc, (ix - 18)
	ld	a, (ix - 19)
	ld	hl, (ix - 11)
	ld	d, (ix - 24)
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 7)
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	bc, (ix - 11)
	ld	a, d
	call	__fneg
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 3)
	ld	a, (ix - 4)
	call	__fmul
	push	bc
	pop	iy
	ld	d, a
	ld	bc, (ix - 22)
	ld	a, (ix - 23)
	ld	hl, (ix - 14)
	ld	e, (ix - 15)
	call	__fmul
	lea	hl, iy
	ld	e, d
	call	__fadd
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecDotProduct
_vecDotProduct:
	ld	hl, -11
	call	__frameset
	ld	iy, (ix + 6)
	ld	de, (ix + 9)
	ld	hl, (iy)
	ld	(ix - 7), hl
	ld	a, (iy + 3)
	ld	(ix - 8), a
	push	de
	pop	hl
	ld	hl, (hl)
	ld	(ix - 3), hl
	push	de
	pop	iy
	ld	a, (iy + 3)
	ex	de, hl
	ld	(ix - 4), a
	ld	iy, (ix + 6)
	ld	bc, (iy + 4)
	push	hl
	pop	iy
	ld	hl, (iy + 4)
	lea	de, iy
	ld	iy, (ix + 6)
	ld	a, (iy + 7)
	push	de
	pop	iy
	ld	e, (iy + 7)
	call	__fmul
	ld	(ix - 11), bc
	ld	d, a
	ld	bc, (ix - 7)
	ld	a, (ix - 8)
	ld	hl, (ix - 3)
	ld	e, (ix - 4)
	call	__fmul
	ld	hl, (ix - 11)
	ld	e, d
	call	__fadd
	ld	(ix - 3), bc
	ld	d, a
	ld	iy, (ix + 6)
	ld	bc, (iy + 8)
	ld	iy, (ix + 9)
	ld	hl, (iy + 8)
	ld	iy, (ix + 6)
	ld	a, (iy + 11)
	ld	iy, (ix + 9)
	ld	e, (iy + 11)
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecNormalise
_vecNormalise:
	ld	hl, -7
	call	__frameset
	ld	iy, (ix + 9)
	ld	hl, (iy)
	ld	(ix - 3), hl
	lea	hl, iy + 3
	ld	a, (hl)
	ld	(ix - 7), a
	lea	de, iy + 4
	ld	bc, (iy + 4)
	push	de
	pop	iy
	lea	hl, iy + 3
	ld	a, (hl)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 6), a
	ld	bc, (ix - 3)
	ld	a, (ix - 7)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 6)
	call	__fadd
	ld	(ix - 3), bc
	ld	d, a
	ld	iy, (ix + 9)
	lea	hl, iy + 8
	ld	bc, (iy + 8)
	push	hl
	pop	iy
	lea	hl, iy + 3
	ld	a, (hl)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 3)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, -8388608
	ld	a, 63
	call	__fdiv
	push	bc
	pop	de
	ld	(ix - 6), de
	ld	(ix - 3), a
	ld	iy, (ix + 9)
	ld	bc, (iy)
	ld	a, (iy + 3)
	ex	de, hl
	ld	e, (ix - 3)
	call	__fmul
	ld	hl, (ix + 6)
	ld	(hl), bc
	push	hl
	pop	iy
	ld	(iy + 3), a
	ld	iy, (ix + 9)
	ld	hl, (iy + 4)
	ld	bc, (ix - 6)
	ld	a, e
	ld	iy, (ix + 9)
	ld	e, (iy + 7)
	call	__fmul
	ld	hl, (ix + 6)
	push	hl
	pop	iy
	ld	(iy + 4), bc
	ld	(iy + 7), a
	ld	hl, (ix + 9)
	push	hl
	pop	iy
	ld	hl, (iy + 8)
	ld	bc, (ix - 6)
	ld	a, (ix - 3)
	ld	e, (iy + 11)
	call	__fmul
	ld	iy, (ix + 6)
	ld	(iy + 8), bc
	ld	(iy + 11), a
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_vecAngleBetween
_vecAngleBetween:
	ld	hl, -17
	call	__frameset
	ld	de, (ix + 6)
	ld	(ix - 17), de
	ld	hl, (ix + 9)
	ld	(ix - 3), hl
	push	hl
	push	de
	call	_vecDotProduct
	ld	(ix - 6), hl
	ld	(ix - 7), e
	pop	hl
	pop	hl
	ld	iy, (ix - 17)
	ld	hl, (iy)
	ld	(ix - 14), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	(ix - 10), bc
	ld	(ix - 11), a
	ld	bc, (ix - 14)
	ld	a, d
	push	bc
	pop	hl
	ld	e, d
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, (ix - 11)
	call	__fadd
	ld	(ix - 10), bc
	ld	d, a
	ld	bc, (iy + 8)
	ld	a, (iy + 11)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, -8388608
	ld	a, 63
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 6)
	ld	a, (ix - 7)
	call	__fmul
	ld	(ix - 6), bc
	ld	(ix - 7), a
	ld	iy, (ix - 3)
	ld	hl, (iy)
	ld	(ix - 14), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	(ix - 10), bc
	ld	(ix - 11), a
	ld	bc, (ix - 14)
	ld	a, d
	push	bc
	pop	hl
	ld	e, d
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, (ix - 11)
	call	__fadd
	ld	(ix - 10), bc
	ld	d, a
	ld	bc, (iy + 8)
	ld	a, (iy + 11)
	push	bc
	pop	hl
	ld	e, a
	call	__fmul
	ld	hl, (ix - 10)
	ld	e, d
	call	__fadd
	ld	l, a
	push	hl
	push	bc
	call	_sqrt
	pop	bc
	pop	bc
	ld	bc, -8388608
	ld	a, 63
	call	__fdiv
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 6)
	ld	a, (ix - 7)
	call	__fmul
	ld	(ix + 6), bc
	ld	(ix + 9), a
	ld	sp, ix
	pop	ix
	jp	_acos
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_linePlaneCollision
_linePlaneCollision:
	ld	hl, -27
	call	__frameset
	ld	iy, (ix + 33)
	lea	hl, ix - 12
	ld	(ix - 15), hl
	ld	hl, (iy)
	ld	(ix - 21), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	ld	hl, (ix + 15)
	ld	e, (ix + 18)
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 18), a
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	hl, (ix - 21)
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 18)
	call	__fadd
	ld	(ix - 18), bc
	ld	d, a
	ld	iy, (ix + 33)
	ld	hl, (iy + 8)
	ld	bc, (ix + 21)
	ld	a, (ix + 24)
	ld	e, (iy + 11)
	call	__fmul
	ld	hl, (ix - 18)
	ld	e, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix + 27)
	ld	a, (ix + 30)
	call	__fsub
	ld	(ix - 18), bc
	ld	(ix - 21), a
	ld	iy, (ix + 36)
	ld	hl, (iy)
	ld	(ix - 27), hl
	ld	d, (iy + 3)
	ld	bc, (iy + 4)
	ld	a, (iy + 7)
	ld	hl, (ix + 15)
	ld	e, (ix + 18)
	call	__fmul
	push	bc
	pop	iy
	ld	(ix - 24), a
	ld	bc, (ix + 9)
	ld	a, (ix + 12)
	ld	hl, (ix - 27)
	ld	e, d
	call	__fmul
	lea	hl, iy
	ld	e, (ix - 24)
	call	__fadd
	ld	(ix - 24), bc
	ld	d, a
	ld	iy, (ix + 36)
	ld	hl, (iy + 8)
	ld	bc, (ix + 21)
	ld	a, (ix + 24)
	ld	iy, (ix + 36)
	ld	e, (iy + 11)
	call	__fmul
	ld	hl, (ix - 24)
	ld	e, d
	call	__fadd
	push	bc
	pop	hl
	ld	e, a
	ld	bc, (ix - 18)
	ld	a, (ix - 21)
	call	__fdiv
	ld	l, a
	push	hl
	push	bc
	push	iy
	ld	hl, (ix - 15)
	push	hl
	call	_vecScalarProduct
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 15)
	push	hl
	ld	hl, (ix + 33)
	push	hl
	ld	hl, (ix + 6)
	push	hl
	call	_vecAdd
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_accessMatrixElement
_accessMatrixElement:
	call	__frameset0
	ld	de, (ix + 6)
	ld	hl, (ix + 9)
	ld	iy, (ix + 12)
	ld	c, 4
	call	__ishl
	push	hl
	pop	bc
	add	iy, bc
	ld	c, 2
	ex	de, hl
	call	__ishl
	push	hl
	pop	de
	add	iy, de
	ld	hl, (iy)
	ld	e, (iy + 3)
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_MatrMul
_MatrMul:
	ld	hl, -57
	call	__frameset
	ld	hl, (ix + 9)
	ld	(ix - 35), hl
	ld	iy, (ix + 12)
	ld	de, 0
	lea	hl, ix - 16
	ld	(ix - 44), hl
	lea	hl, ix - 32
	ld	(ix - 47), hl
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	(ix - 16), hl
	ld	(ix - 13), a
	ld	hl, (iy + 4)
	ld	a, (iy + 7)
	ld	(ix - 12), hl
	ld	(ix - 9), a
	ld	hl, (iy + 8)
	ld	a, (iy + 11)
	ld	(ix - 8), hl
	ld	(ix - 5), a
	ld	hl, (iy + 12)
	ld	a, (iy + 15)
	ld	(ix - 4), hl
	ld	(ix - 1), a
BB9_1:
	ld	bc, 4
	push	de
	pop	hl
	or	a, a
	sbc	hl, bc
	jp	z, BB9_6
	ld	(ix - 50), de
	or	a, a
	sbc	hl, hl
	push	hl
	pop	iy
	ld	(ix - 38), hl
	xor	a, a
BB9_3:
	lea	hl, iy
	ld	de, 16
	or	a, a
	sbc	hl, de
	jr	z, BB9_5
	lea	de, iy
	ld	hl, (ix - 35)
	add	hl, de
	ld	(ix - 41), hl
	ld	hl, (ix - 41)
	ld	bc, (hl)
	ld	(ix - 53), iy
	ld	hl, (ix - 44)
	add	hl, de
	ld	de, (hl)
	ld	(ix - 57), de
	ex	de, hl
	ld	(ix - 54), a
	ld	iy, (ix - 41)
	ld	a, (iy + 3)
	ld	hl, (ix - 57)
	push	de
	pop	iy
	ld	e, (iy + 3)
	ld	iy, (ix - 53)
	call	__fmul
	ld	hl, (ix - 38)
	ld	e, (ix - 54)
	call	__fadd
	ld	(ix - 38), bc
	ld	de, 4
	add	iy, de
	jr	BB9_3
BB9_5:
	ld	de, (ix - 50)
	push	de
	pop	hl
	ld	c, 2
	call	__ishl
	push	hl
	pop	bc
	ld	iy, (ix - 47)
	add	iy, bc
	ld	hl, (ix - 38)
	ld	(iy), hl
	ld	(iy + 3), a
	inc	de
	ld	iy, (ix - 35)
	lea	iy, iy + 16
	ld	(ix - 35), iy
	jp	BB9_1
BB9_6:
	ld	hl, (ix - 32)
	ld	a, (ix - 29)
	ld	iy, (ix + 6)
	ld	(iy), hl
	ld	(iy + 3), a
	ld	hl, (ix - 28)
	ld	a, (ix - 25)
	ld	(iy + 4), hl
	ld	(iy + 7), a
	ld	hl, (ix - 24)
	ld	a, (ix - 21)
	ld	(iy + 8), hl
	ld	(iy + 11), a
	ld	hl, (ix - 20)
	ld	a, (ix - 17)
	ld	(iy + 12), hl
	ld	(iy + 15), a
	lea	hl, iy
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_RotateZ
_RotateZ:
	ld	hl, -67
	call	__frameset
	ld	de, (ix + 12)
	lea	hl, ix - 64
	ld	(ix - 67), hl
	ld	l, (ix + 15)
	push	hl
	push	de
	call	_cos
	pop	bc
	pop	bc
	ld	(ix - 64), hl
	ld	(ix - 61), e
	ld	l, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_sin
	push	hl
	pop	bc
	ld	a, e
	pop	hl
	pop	hl
	call	__fneg
	ld	(ix - 60), bc
	ld	(ix - 57), a
	or	a, a
	sbc	hl, hl
	ld	(ix - 56), hl
	ld	(ix - 53), h
	ld	(ix - 52), hl
	ld	(ix - 49), h
	ld	l, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_sin
	pop	bc
	pop	bc
	ld	(ix - 48), hl
	ld	(ix - 45), e
	ld	l, (ix + 15)
	push	hl
	ld	hl, (ix + 12)
	push	hl
	call	_cos
	pop	bc
	pop	bc
	ld	(ix - 44), hl
	ld	(ix - 41), e
	ld	iy, (ix - 67)
	lea	hl, iy + 24
	ld	(ix - 40), 0
	push	hl
	pop	de
	inc	de
	ld	bc, 15
	ldir
	ld	hl, -8388608
	ld	(ix - 24), hl
	ld	(ix - 21), 63
	lea	hl, iy + 44
	ld	(ix - 20), 0
	push	hl
	pop	de
	inc	de
	ld	bc, 15
	ldir
	ld	hl, -8388608
	ld	(ix - 4), hl
	ld	(ix - 1), 63
	ld	hl, (ix + 9)
	push	hl
	push	iy
	ld	hl, (ix + 6)
	push	hl
	call	_MatrMul
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix + 6)
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.text,"ax",@progbits
	public	_main
_main:
	ld	hl, -94
	call	__frameset
	ld	hl, ___const.main.camPos
	xor	a, a
	ld	iy, -8388608
	lea	de, ix - 12
	lea	bc, ix - 24
	ld	(ix - 88), bc
	lea	bc, ix - 48
	ld	(ix - 79), bc
	lea	bc, ix - 60
	ld	(ix - 82), bc
	lea	bc, ix - 76
	ld	(ix - 85), bc
	ld	(ix - 91), de
	ld	bc, 12
	ldir
	ld	bc, 0
	ld	(_vertices), bc
	ld	e, a
	ld	(_vertices+3), a
	ld	(_vertices+4), bc
	ld	(_vertices+7), a
	ld	(_vertices+8), bc
	ld	(_vertices+11), a
	ld	(_vertices+12), iy
	ld	l, 63
	ld	a, l
	ld	(_vertices+15), a
	ld	(_vertices+16), iy
	ld	(_vertices+19), a
	ld	(_vertices+20), bc
	ld	a, e
	ld	(_vertices+23), a
	ld	(_vertices+24), bc
	ld	(_vertices+27), a
	ld	(_vertices+28), iy
	ld	a, l
	ld	(_vertices+31), a
	ld	(_vertices+32), bc
	ld	a, e
	ld	(_vertices+35), a
	ld	(_vertices+36), bc
	ld	(_vertices+39), a
	ld	(_vertices+40), iy
	ld	a, l
	ld	(_vertices+43), a
	ld	(_vertices+44), iy
	ld	(_vertices+47), a
	ld	(_vertices+48), iy
	ld	(_vertices+51), a
	ld	(_vertices+52), bc
	ld	a, e
	ld	(_vertices+55), a
	ld	(_vertices+56), iy
	ld	a, l
	ld	(_vertices+59), a
	ld	(_vertices+60), iy
	ld	(_vertices+63), a
	ld	(_vertices+64), bc
	ld	a, e
	ld	(_vertices+67), a
	ld	(_vertices+68), iy
	ld	a, l
	ld	(_vertices+71), a
	ld	(_vertices+72), bc
	ld	a, e
	ld	(_vertices+75), a
	ld	(_vertices+76), iy
	ld	a, l
	ld	(_vertices+79), a
	ld	(_vertices+80), iy
	ld	(_vertices+83), a
	ld	(_vertices+84), iy
	ld	(_vertices+87), a
	ld	(_vertices+88), bc
	ld	a, e
	ld	(_vertices+91), a
	ld	(_vertices+92), iy
	ld	a, l
	ld	(_vertices+95), a
	ld	(_vertices+96), bc
	ld	a, e
	ld	(_vertices+99), a
	ld	(_vertices+100), iy
	ld	a, l
	ld	(_vertices+103), a
	ld	(_vertices+104), iy
	ld	(_vertices+107), a
	ld	(_vertices+108), iy
	ld	(_vertices+111), a
	ld	(_vertices+112), iy
	ld	(_vertices+115), a
	ld	(_vertices+116), iy
	ld	(_vertices+119), a
	ld	(_vertices+120), iy
	ld	(_vertices+123), a
	ld	(_vertices+124), iy
	ld	(_vertices+127), a
	call	_gfx_Begin
	call	_gfx_ZeroScreen
	ld	hl, 1
	push	hl
	call	_gfx_SetDraw
	pop	hl
	ld	iy, (ix - 88)
	lea	de, iy
	ld	hl, ___const.main.screen
	ld	bc, 12
	ldir
	push	iy
	pea	ix - 36
	call	_vecNormalise
	pop	hl
BB11_1:
	pop	hl
	call	_os_GetCSC
	or	a, a
	jp	nz, BB11_6
	call	_gfx_ZeroScreen
	or	a, a
	sbc	hl, hl
	push	hl
	pop	bc
BB11_3:
	push	bc
	pop	hl
	ld	de, 128
	or	a, a
	sbc	hl, de
	jp	z, BB11_5
	push	bc
	pop	de
	ld	iy, _vertices
	add	iy, de
	ld	(ix - 88), iy
	ld	hl, (iy)
	ld	a, (iy + 3)
	ld	(ix - 48), hl
	ld	(ix - 45), a
	ld	hl, (iy + 4)
	ld	a, (iy + 7)
	ld	(ix - 44), hl
	ld	(ix - 41), a
	ld	hl, (iy + 8)
	ld	a, (iy + 11)
	ld	(ix - 40), hl
	ld	(ix - 37), a
	ld	hl, (ix - 79)
	push	hl
	ld	hl, (ix - 91)
	push	hl
	ld	hl, (ix - 82)
	push	hl
	ld	(ix - 94), bc
	call	_vecSubtract
	pop	hl
	pop	hl
	pop	hl
	ld	hl, (ix - 82)
	push	hl
	ld	hl, (ix - 79)
	push	hl
	ld	hl, -61
	push	hl
	ld	hl, 5958860
	push	hl
	ld	hl, 63
	push	hl
	ld	hl, -8388608
	push	hl
	or	a, a
	sbc	hl, hl
	push	hl
	ld	de, 0
	push	de
	push	hl
	push	de
	ld	hl, _hit
	push	hl
	call	_linePlaneCollision
	ld	hl, 33
	add	hl, sp
	ld	sp, hl
	ld	hl, 47
	push	hl
	call	_gfx_SetColor
	pop	hl
	ld	bc, (_hit)
	ld	a, (_hit+3)
	call	__ftol
	push	bc
	pop	hl
	ld	bc, (_hit+4)
	ld	a, (_hit+7)
	call	__ftol
	push	bc
	push	hl
	call	_gfx_SetPixel
	pop	hl
	pop	hl
	ld	hl, 61
	push	hl
	ld	hl, 7717519
	push	hl
	ld	hl, (ix - 88)
	push	hl
	ld	hl, (ix - 85)
	push	hl
	call	_RotateZ
	ld	iy, (ix - 94)
	pop	hl
	pop	hl
	pop	hl
	pop	hl
	ld	de, (ix - 88)
	ld	hl, (ix - 85)
	ld	bc, 16
	ldir
	ld	de, 16
	add	iy, de
	lea	bc, iy
	jp	BB11_3
BB11_5:
	ld	hl, 1
	push	hl
	call	_gfx_Blit
	jp	BB11_1
BB11_6:
	call	_gfx_End
	or	a, a
	sbc	hl, hl
	ld	sp, ix
	pop	ix
	ret
	section	.text,"ax",@progbits

	section	.rodata,"a",@progbits
	private	___const.main.camPos
___const.main.camPos:
	dd	0xc1200000
	dd	0x40a00000
	dd	0x41200000

	section	.bss,"aw",@nobits
	public	_vertices
_vertices:
	rb	128

	section	.rodata,"a",@progbits
	private	___const.main.screen
___const.main.screen:
	dd	0x00000000
	dd	0x00000000
	dd	0x3f800000

	section	.bss,"aw",@nobits
	public	_hit
_hit:
	rb	12

	ident	"clang version 15.0.0 (https://github.com/jacobly0/llvm-project 6d9aa7a16db70f3d02ae304b08d4a03011281fef)"
	extern	__Unwind_SjLj_Register
	extern	__frameset
	extern	_gfx_Begin
	extern	_sin
	extern	__fadd
	extern	_sqrt
	extern	__ishl
	extern	__fmul
	extern	__ftol
	extern	_gfx_SetDraw
	extern	_acos
	extern	__Unwind_SjLj_Unregister
	extern	_gfx_Blit
	extern	__fneg
	extern	_gfx_ZeroScreen
	extern	__fdiv
	extern	_gfx_SetColor
	extern	_gfx_SetPixel
	extern	_gfx_End
	extern	_os_GetCSC
	extern	_cos
	extern	__frameset0
	extern	__fsub
